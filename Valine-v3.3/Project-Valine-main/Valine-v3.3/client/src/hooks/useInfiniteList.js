import { useEffect, useRef, useState } from 'react';export default function useInfiniteList(fetchPage,deps=[]){const [items,setItems]=useState([]);const [page,setPage]=useState(0);const [end,setEnd]=useState(false);const sentinel=useRef(null);useEffect(()=>{setItems([]);setPage(0);setEnd(false);},deps);useEffect(()=>{if(end)return;let cancel=false;fetchPage(page).then(r=>{if(cancel)return;if(!r.length)setEnd(true);setItems(prev=>[...prev,...r]);});return()=>{cancel=true};},[page,end]);useEffect(()=>{const io=new IntersectionObserver(e=>{if(e[0].isIntersecting)setPage(p=>p+1);},{rootMargin:'200px'});if(sentinel.current)io.observe(sentinel.current);return()=>io.disconnect();},[]);return {items,sentinel,end};}
