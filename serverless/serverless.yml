service: joint-api
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs20.x
  region: us-west-2
  stage: dev

  httpApi:
    cors:
      allowedOrigins:
        - https://<your-amplify-domain>
        - http://localhost:5173
      allowedHeaders: [ Authorization, Content-Type ]
      allowedMethods: [ GET, POST ]

  environment:
    S3_BUCKET: ${ssm:/joint/dev/S3_BUCKET}
    COGNITO_POOL_ID: ${ssm:/joint/dev/COGNITO_POOL_ID}
    COGNITO_REGION: ${ssm:/joint/dev/COGNITO_REGION}
    COGNITO_CLIENT_ID: ${ssm:/joint/dev/COGNITO_CLIENT_ID}
    DATABASE_URL: ${ssm:/joint/dev/DATABASE_URL~true}

  # Uncomment & fill when Aurora is ready
  # vpc:
  #   securityGroupIds:
  #     - sg-xxxxxxxx
  #   subnetIds:
  #     - subnet-aaaa
  #     - subnet-bbbb

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
          Resource: arn:aws:s3:::${ssm:/joint/dev/S3_BUCKET}/*

functions:
  healthz:
    handler: src/handlers/health.handler
    events:
      - httpApi: { path: /healthz, method: get }

  presignUpload:
    handler: src/handlers/uploads.presign
    events:
      - httpApi: { path: /uploads/presign, method: post }

  scripts:
    handler: src/handlers/scripts.handler
    events:
      - httpApi: { path: /scripts, method: get }
      - httpApi: { path: /scripts, method: post }

  auditions:
    handler: src/handlers/auditions.handler
    events:
      - httpApi: { path: /auditions, method: get }
      - httpApi: { path: /auditions, method: post }

  requests:
    handler: src/handlers/requests.handler
    events:
      - httpApi: { path: /requests, method: get }
      - httpApi: { path: /requests, method: post }
      - httpApi: { path: /requests/{id}/approve, method: post }
      - httpApi: { path: /requests/{id}/reject, method: post }

plugins:
  - serverless-esbuild

package:
  individually: true
